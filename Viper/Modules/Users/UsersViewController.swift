//
//  UsersViewController.swift
//  Viper
//
//  Created by Victor Alejandria on 30/08/2019.
//  Copyright (c) 2019 Victor Alejandria. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit
import RxSwift

final class UsersViewController: UIViewController {

	// MARK: - Public properties -
	var presenter: UsersPresenterInterface!

	// MARK: - Private properties -
	@IBOutlet private weak var tableView: UITableView!
	private let disposeBag = DisposeBag()

	// MARK: - Lifecycle -
	override func viewDidLoad() {
		super.viewDidLoad()

		showUsers()
		setupTableView()
		setupTableViewTap()
	}

	func setupTableView() {
		presenter.users.bind(to: tableView
			.rx
			.items(cellIdentifier: "userCell")) {
				row, item, cell in
				cell.textLabel?.text = item.name
				cell.detailTextLabel?.text = item.username
		}
		.disposed(by: disposeBag)
	}

	func setupTableViewTap() {
		tableView.rx
			.modelSelected(ServicesUser.self)
			.subscribe ({ [unowned self] (user) in
				self.showUser(index: self.tableView.indexPathForSelectedRow?.item ?? 0)
			}).disposed(by: disposeBag)
	}

}

// MARK: - Extensions -

extension UsersViewController: UsersViewInterface {
	func showUsers() {
		presenter.showUsers { (users) -> (Void) in
			DispatchQueue.main.async { [weak self] in
				self?.tableView.reloadData()
			}
		}
	}

	func showUser(index: Int) {
		presenter.showUserWith(index: index)
	}

}
