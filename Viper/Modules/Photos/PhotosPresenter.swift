//
//  PhotosPresenter.swift
//  Viper
//
//  Created by Victor Alejandria on 30/08/2019.
//  Copyright (c) 2019 Victor Alejandria. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class PhotosPresenter {

	// MARK: - Private properties -

	private var privateAlbum = Album()
	private var privatePhotos = [Photo]()
	private var privateCache = NSCache<NSString, UIImage>()
	private unowned let view: PhotosViewInterface
	private let interactor: PhotosInteractorInterface
	private let wireframe: PhotosWireframeInterface

	// MARK: - Lifecycle -

	init(view: PhotosViewInterface, interactor: PhotosInteractorInterface, wireframe: PhotosWireframeInterface, album: Album) {
		self.view = view
		self.interactor = interactor
		self.wireframe = wireframe
		self.privateAlbum = album
	}
}

// MARK: - Extensions -

extension PhotosPresenter: PhotosPresenterInterface {
	func downloadPhotoWith(url: String, completion: @escaping DownloadedImageCompletionBlock) {
        DispatchQueue.global(qos: .background).async {
			self.interactor.downloadPhotoWith(url: url, completion: completion)
		}
	}

	var localImageCache: NSCache<NSString, UIImage> {
		return privateCache
	}

	func showPhotosWithAlbum(id: Int, completion: @escaping PhotosCompletionBlock) {
		DispatchQueue.global(qos: .background).async {
			self.interactor.getPhotosWithAlbum(id: id) { (photos) -> (Void) in
				self.privatePhotos = photos
				completion(photos)
			}
		}
	}

	var album: Album {
		return privateAlbum
	}

	var photos: [Photo] {
		return privatePhotos
	}
}
